{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TripDataService {\n  constructor(http) {\n    this.http = http;\n    this.apiBaseUrl = 'http://localhost:3000/api/';\n    this.tripUrl = `${this.apiBaseUrl}trips/`;\n  }\n  addTrip(formData) {\n    console.log('Inside TripDataService#addTrip');\n    console.log(JSON.stringify(formData));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(this.tripUrl, formData, httpOptions).toPromise()\n    // .then(response => response.json() as Trip[])\n    .catch(this.handleError);\n  }\n  getTrips() {\n    console.log('Inside TripDataService#getTrips');\n    return this.http.get(`${this.apiBaseUrl}trips`).toPromise()\n    //.then(response => response.json() as Trip[])\n    .catch(this.handleError);\n  }\n  handleError(error) {\n    console.error('Something has gone wrong', error); // for demo purpose only\n    return Promise.reject(error.message || error);\n  }\n}\nTripDataService.ɵfac = function TripDataService_Factory(t) {\n  return new (t || TripDataService)(i0.ɵɵinject(i1.HttpClient));\n};\nTripDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TripDataService,\n  factory: TripDataService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEhB,eAAU,GAAG,4BAA4B;IACzC,YAAO,GAAG,GAAG,IAAI,CAACC,UAAU,QAAQ;EAHJ;EAKjCC,OAAO,CAACC,QAAc;IAE3BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAE7CD,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;IAIrC,MAAMK,WAAW,GAAG;MAElBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;QAEvB,cAAc,EAAG;OAElB;KAEJ;IAIF,OAAO,IAAI,CAACG,IAAI,CAACU,IAAI,CAAS,IAAI,CAACC,OAAO,EAAER,QAAQ,EAAEK,WAAW,CAAC,CAE3DI,SAAS;IAEX;IAAA,CAEEC,KAAK,CAAC,IAAI,CAACC,WAAW,CAAC;EAE7B;EAGOC,QAAQ;IACbX,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,OAAO,IAAI,CAACL,IAAI,CACbgB,GAAG,CAAC,GAAG,IAAI,CAACf,UAAU,OAAO,CAAC,CAC9BW,SAAS;IACV;IAAA,CACCC,KAAK,CAAC,IAAI,CAACC,WAAW,CAAC;EAC5B;EAEQA,WAAW,CAACG,KAAU;IAC5Bb,OAAO,CAACa,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC,CAAC;IAClD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAACG,OAAO,IAAIH,KAAK,CAAC;EAC/C;;AAlDWnB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAuB,SAAfvB,eAAe;AAAA","names":["HttpHeaders","TripDataService","constructor","http","apiBaseUrl","addTrip","formData","console","log","JSON","stringify","httpOptions","headers","post","tripUrl","toPromise","catch","handleError","getTrips","get","error","Promise","reject","message","factory"],"sourceRoot":"","sources":["D:\\Homework\\CS-465\\travlr\\app_admin\\src\\app\\services\\trip-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Trip } from '../models/trip';\n\n@Injectable()\nexport class TripDataService {\n\n  constructor(private http: HttpClient) { }\n\n  private apiBaseUrl = 'http://localhost:3000/api/';\n  private tripUrl = `${this.apiBaseUrl}trips/`\n\n  public addTrip(formData: Trip): Promise<Trip[]> {\n\n    console.log('Inside TripDataService#addTrip');\n\n    console.log(JSON.stringify(formData));\n\n \n\n    const httpOptions = {\n\n      headers: new HttpHeaders({\n\n        'Content-Type':  'application/json'\n\n      })\n\n  };\n\n \n\n return this.http.post<Trip[]>(this.tripUrl, formData, httpOptions)\n\n       .toPromise()\n\n      // .then(response => response.json() as Trip[])\n\n       .catch(this.handleError);\n\n  }\n\n\n  public getTrips(): Promise<Trip[]> {\n    console.log('Inside TripDataService#getTrips');\n    return this.http\n      .get(`${this.apiBaseUrl}trips`)\n      .toPromise()\n      //.then(response => response.json() as Trip[])\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('Something has gone wrong', error); // for demo purpose only\n    return Promise.reject(error.message || error);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}