{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/trip-data.service\";\nimport * as i4 from \"@angular/common\";\nfunction AddTripComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Trip Code is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddTripComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddTripComponent_div_8_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.code.errors.required);\n  }\n}\nfunction AddTripComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddTripComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddTripComponent_div_13_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.name.errors.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class AddTripComponent {\n  constructor(formBuilder, router, tripService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.tripService = tripService;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      _id: [],\n      code: ['', Validators.required],\n      name: ['', Validators.required],\n      length: ['', Validators.required],\n      start: ['', Validators.required],\n      resort: ['', Validators.required],\n      perPerson: ['', Validators.required],\n      image: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.addForm.valid) {\n      this.tripService.addTrip(this.addForm.value).then(data => {\n        console.log(data);\n        this.router.navigate(['']);\n      });\n    }\n  }\n  // get the form short name to access the form fields\n  get f() {\n    return this.addForm.controls;\n  }\n}\nAddTripComponent.ɵfac = function AddTripComponent_Factory(t) {\n  return new (t || AddTripComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TripDataService));\n};\nAddTripComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTripComponent,\n  selectors: [[\"app-add-trip\"]],\n  decls: 14,\n  vars: 9,\n  consts: [[1, \"col-md-3\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"code\", \"placeholder\", \"Code\", 1, \"form-control\", 3, \"ngClass\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Name\", 1, \"form-control\", 3, \"ngClass\"]],\n  template: function AddTripComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Add Trip\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AddTripComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\");\n      i0.ɵɵtext(6, \"Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵtemplate(8, AddTripComponent_div_8_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\");\n      i0.ɵɵtext(11, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵtemplate(13, AddTripComponent_div_13_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.addForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f.code.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.code.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.name.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QACzC,gBAAgB;;;;;;;;ICMFC,2BAAoC;IAChCA,uCACJ;IAAAA,iBAAM;;;;;IAHVA,2BAAwC;IACpCA,uEAEM;IACVA,iBAAM;;;;IAHIA,eAA4B;IAA5BA,oDAA4B;;;;;IAUlCA,2BAAoC;IAChCA,kCACJ;IAAAA,iBAAM;;;;;IAHVA,2BAAwC;IACpCA,wEAEM;IACVA,iBAAM;;;;IAHIA,eAA4B;IAA5BA,oDAA4B;;;;;;;;ADRlD,OAAM,MAAOC,gBAAgB;EAG3BC,YACUC,WAAwB,EACxBC,MAAc,EACdC,WAA4B;IAF5B,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAJrB,cAAS,GAAG,KAAK;EAKb;EACJC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACpCC,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAC/BC,IAAI,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ,CAAC;MAC/BE,MAAM,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACY,QAAQ,CAAC;MACjCG,KAAK,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACY,QAAQ,CAAC;MAChCI,MAAM,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACY,QAAQ,CAAC;MACjCK,SAAS,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACY,QAAQ,CAAC;MACpCM,KAAK,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACY,QAAQ,CAAC;MAChCO,WAAW,EAAE,CAAC,EAAE,EAAEnB,UAAU,CAACY,QAAQ;KACtC,CAAC;EACJ;EACAQ,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACb,OAAO,CAACc,KAAK,EAAE;MACtB,IAAI,CAAChB,WAAW,CAACiB,OAAO,CAAC,IAAI,CAACf,OAAO,CAACgB,KAAK,CAAC,CACzCC,IAAI,CAACC,IAAI,IAAG;QACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAI,CAACrB,MAAM,CAACwB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5B,CAAC,CAAC;;EAER;EACA;EACA,IAAIC,CAAC;IAAK,OAAO,IAAI,CAACtB,OAAO,CAACuB,QAAQ;EAAE;;AAhC7B7B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV7BnC,8BAAsB;MACMA,wBAAQ;MAAAA,iBAAK;MACrCA,+BAAoD;MAAxBA;QAAA,OAAYoC,cAAU;MAAA,EAAC;MAC/CpC,8BAAwB;MACbA,qBAAK;MAAAA,iBAAQ;MACpBA,2BAC6D;MAC7DA,iEAIM;MACVA,iBAAM;MACNA,8BAAwB;MACbA,sBAAK;MAAAA,iBAAQ;MACpBA,4BAC6D;MAC7DA,mEAIM;MACVA,iBAAM;;;MApBJA,eAAqB;MAArBA,uCAAqB;MAIfA,eAAwD;MAAxDA,wFAAwD;MACtDA,eAAgC;MAAhCA,yDAAgC;MASlCA,eAAwD;MAAxDA,wFAAwD;MACtDA,eAAgC;MAAhCA,yDAAgC","names":["Validators","i0","AddTripComponent","constructor","formBuilder","router","tripService","ngOnInit","addForm","group","_id","code","required","name","length","start","resort","perPerson","image","description","onSubmit","submitted","valid","addTrip","value","then","data","console","log","navigate","f","controls","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Homework\\CS-465\\travlr\\app_admin\\src\\app\\add-trip\\add-trip.component.ts","D:\\Homework\\CS-465\\travlr\\app_admin\\src\\app\\add-trip\\add-trip.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from\n  \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { TripDataService } from '../services/trip-data.service';\n@Component({\n  selector: 'app-add-trip',\n  templateUrl: './add-trip.component.html',\n  styleUrls: ['./add-trip.component.css']\n})\nexport class AddTripComponent implements OnInit {\n  addForm: FormGroup;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private tripService: TripDataService\n  ) { }\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      _id: [],\n      code: ['', Validators.required],\n      name: ['', Validators.required],\n      length: ['', Validators.required],\n      start: ['', Validators.required],\n      resort: ['', Validators.required],\n      perPerson: ['', Validators.required],\n      image: ['', Validators.required],\n      description: ['', Validators.required],\n    })\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.addForm.valid) {\n      this.tripService.addTrip(this.addForm.value)\n        .then(data => {\n          console.log(data);\n          this.router.navigate(['']);\n        });\n    }\n  }\n  // get the form short name to access the form fields\n  get f() { return this.addForm.controls; }\n}\n","<div class=\"col-md-3\">\n    <h2 class=\"text-center\">Add Trip</h2>\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Code:</label>\n            <input type=\"text\" formControlName=\"code\" placeholder=\"Code\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n            <div *ngIf=\"submitted && f.code.errors\">\n                <div *ngIf=\"f.code.errors.required\">\n                    Trip Code is required\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label>Name:</label>\n            <input type=\"text\" formControlName=\"name\" placeholder=\"Name\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\">\n            <div *ngIf=\"submitted && f.name.errors\">\n                <div *ngIf=\"f.name.errors.required\">\n                    Name is required\n                </div>\n            </div>\n        </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}